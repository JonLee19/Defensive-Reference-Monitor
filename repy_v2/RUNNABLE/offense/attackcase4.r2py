def logln(sentence):
  log(sentence+"\n")

def cleanupAB(filename):
  Afn = filename+".a"
  Bfn = filename+".b"
  # Clean up of A and B files for existing files
  if Afn in listfiles():
    removefile(Afn)
  if Bfn in listfiles():
    removefile(Bfn)

cleanupAB("testfile.txt")
cleanupAB("testfile1.txt")
    
logln("Beginning Attack Case 4")

#create test file
testfile=ABopenfile("testfile.txt",True)  #Create an AB file

# I should get 'SE' when reading an empty file...
assert('SE' == testfile.readat(None,0))

# put some valid data in the file.
testfile.writeat("Stest12345E",0)

testfile.close()
  
# testfile1=ABopenfile("testfile1.txt",True)

try:  
  # Try to write to file that has already been closed
  testfile.writeat("Stest12345E",0)

  # Try to read from file that has already been closed 
  contents = testfile.readat(None, 0)

  testfile.close() # if it doesn't error as its supposed to

except (NameError, FileClosedError) as e:
  logln("PASSED | Accessing File which has been closed already")
  #testfile=ABopenfile("testfile.txt",True)  #Create an AB file


else:
  logln("FAILED | Non-existent file opened with create=False")
  try:
    testfile.close() #try closing again
  except:
    logln("Testfile {testfile} threw an exception when trying to close it because of the attempts to open invalid files")

logln("Trying File Closed Error")
quit

try:
  testfile1=ABopenfile("testfile1.txt",True)
  
  # put some invalid bad data in the file.
  testfile1.writeat("S1234567890E",20)
  testfile1.writeat("S12345E",0)
  testfile1.writeat("S",11)

  try:
    testfile1.writeat(0x0001,"six") #invalid write, six is not numerical
  except Exception as e:
    logln("PASSED | Invalid write of non-numerical offset argument")
  else:
    logln("FAILED | Invalid write of non-numerical offset argument")


  testfile1.close()

  #Invalid: Cannot Write after file close
  try: 
    testfile1.writeat(0x0001,0)
  except Exception as e:
    logln("PASSED | Write after file close")
  else:
    logln("FAILED | Write after file close")


except:
  try:
    testfile1.close() #try closing again
  except FileClosedError, NameError:
    logln("PASSED | Closing File which has been closed already")
  else:
    logln("FAILED | Closing File which has been closed already")

  logln("Valid Data write to a file is unsuccessfull!")


logln("End of Attack Case 4")
