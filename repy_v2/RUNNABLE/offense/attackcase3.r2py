def logln(sentence):
  log(sentence+"\n")

def cleanupAB(filename):
  Afn = filename+".a"
  Bfn = filename+".b"
  # Clean up of A and B files for existing files
  if Afn in listfiles():
    removefile(Afn)
  if Bfn in listfiles():
    removefile(Bfn)

cleanupAB("testfile.txt")
cleanupAB("testfile1.txt")
    
logln("Beginning Attack Case 3 - Performing and Not Saving Invalid Writes")

try:
  testfile1=ABopenfile("testfile1.txt",True)
  
  # put some invalid bad data in the file.
  testfile1.writeat("S1234567890E",20)
  testfile1.writeat("S12345E",0)
  testfile1.writeat("S",11)
  

  try:
    testfile1.writeat(0x0001,"six") #invalid write, six is not numerical
  except Exception as e:
    logln("PASSED | Invalid write of non-numerical offset argument")
  else:
    logln("FAILED | Invalid write of non-numerical offset argument")


  # TODO: ADD this line back in
  # try:
  #   testfile1.close()
  # except FileClosedError:
  #   logln("Some Error")


  testfile1=ABopenfile("testfile1.txt",False)
  # I should get 'SE' because the earlier edits were invalid
  assert('SE' == testfile1.readat(None,0))

  #Invalid: Cannot Write after file close
  try: 
    testfile1.writeat(0x0001,0)
  except Exception as e:
    logln("PASSED | Write after file close")
  else:
    logln("FAILED | Write after file close")


except:
  try:
    testfile1.close() #try closing again
  except FileClosedError, NameError:
    logln("PASSED | Closing File which has been closed already")
  else:
    logln("FAILED | Closing File which has been closed already")

  logln("Valid Data write to a file is unsuccessfull!")


logln("End of Attack Case 3")
